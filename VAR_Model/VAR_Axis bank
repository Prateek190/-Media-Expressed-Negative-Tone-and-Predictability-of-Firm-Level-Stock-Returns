{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"VAR_Axis bank","provenance":[{"file_id":"1EeY1p-dYepDJ6MGd0q4bcbNkA56iCUgl","timestamp":1609617906186},{"file_id":"1JTFTFR7lwoa55CppmwBCyC9ZFqAiXw8F","timestamp":1609616711671}],"collapsed_sections":[],"mount_file_id":"1t8g4hThRCdWnxlvD1wfBS5qFBXSjHez9","authorship_tag":"ABX9TyMTmNwdm0GndGy7b2ImbSRT"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"aTt-bLhWqiVF","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1609618070883,"user_tz":-330,"elapsed":2579,"user":{"displayName":"Prateek Jaiswal","photoUrl":"","userId":"02713205155461107256"}},"outputId":"16eda4db-2357-4937-d2b5-9fa42ad41f50"},"source":["import pandas as pd\n","import numpy as np\n","import os\n","import matplotlib.pyplot as plt\n","%matplotlib inline\n","from statsmodels.tsa.api import VAR\n","from statsmodels.tsa.stattools import adfuller\n","from statsmodels.tools.eval_measures import rmse,aic"],"execution_count":null,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/statsmodels/tools/_testing.py:19: FutureWarning: pandas.util.testing is deprecated. Use the functions in the public API at pandas.testing instead.\n","  import pandas.util.testing as tm\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"a5PP2bF1rhX1","colab":{"base_uri":"https://localhost:8080/","height":436},"executionInfo":{"status":"ok","timestamp":1609618073884,"user_tz":-330,"elapsed":2223,"user":{"displayName":"Prateek Jaiswal","photoUrl":"","userId":"02713205155461107256"}},"outputId":"f7ae8b8c-f176-4a93-fe71-5e1476618925"},"source":["\n","r=pd.read_csv(\"/content/drive/My Drive/stock/final_AXISBANK.NS.csv\")\n","nt=pd.read_csv(\"/content/drive/My Drive/tone/pct730/pct730_axis bank.csv\")\n","df=pd.DataFrame()\n","df['return']=r['return']\n","df['negative tone']=nt['PCT']\n","df['Date']=r['Date']\n","df.set_index('Date',inplace=True)\n","df[~df.isin([np.nan, np.inf, -np.inf]).any(1)]\n","df.replace([np.inf, -np.inf], np.nan)\n","\n","df.dropna(inplace=True)\n","df\n","\n"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>return</th>\n","      <th>negative tone</th>\n","    </tr>\n","    <tr>\n","      <th>Date</th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-01-01</th>\n","      <td>0.00</td>\n","      <td>1.72</td>\n","    </tr>\n","    <tr>\n","      <th>2018-01-02</th>\n","      <td>-1.06</td>\n","      <td>1.01</td>\n","    </tr>\n","    <tr>\n","      <th>2018-01-03</th>\n","      <td>0.17</td>\n","      <td>1.16</td>\n","    </tr>\n","    <tr>\n","      <th>2018-01-04</th>\n","      <td>-0.10</td>\n","      <td>0.43</td>\n","    </tr>\n","    <tr>\n","      <th>2018-01-05</th>\n","      <td>0.60</td>\n","      <td>0.00</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2019-12-27</th>\n","      <td>-0.21</td>\n","      <td>0.52</td>\n","    </tr>\n","    <tr>\n","      <th>2019-12-28</th>\n","      <td>0.00</td>\n","      <td>1.66</td>\n","    </tr>\n","    <tr>\n","      <th>2019-12-29</th>\n","      <td>0.00</td>\n","      <td>1.29</td>\n","    </tr>\n","    <tr>\n","      <th>2019-12-30</th>\n","      <td>-0.51</td>\n","      <td>0.24</td>\n","    </tr>\n","    <tr>\n","      <th>2019-12-31</th>\n","      <td>0.00</td>\n","      <td>0.22</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>728 rows Ã— 2 columns</p>\n","</div>"],"text/plain":["            return  negative tone\n","Date                             \n","2018-01-01    0.00           1.72\n","2018-01-02   -1.06           1.01\n","2018-01-03    0.17           1.16\n","2018-01-04   -0.10           0.43\n","2018-01-05    0.60           0.00\n","...            ...            ...\n","2019-12-27   -0.21           0.52\n","2019-12-28    0.00           1.66\n","2019-12-29    0.00           1.29\n","2019-12-30   -0.51           0.24\n","2019-12-31    0.00           0.22\n","\n","[728 rows x 2 columns]"]},"metadata":{"tags":[]},"execution_count":2}]},{"cell_type":"code","metadata":{"id":"oalP4NKkAMMu","colab":{"base_uri":"https://localhost:8080/","height":517},"executionInfo":{"status":"ok","timestamp":1609618135383,"user_tz":-330,"elapsed":59243,"user":{"displayName":"Prateek Jaiswal","photoUrl":"","userId":"02713205155461107256"}},"outputId":"6ae2635f-ab96-4543-dba2-4bc4c29dd1a3"},"source":["fig, axes = plt.subplots(nrows=1, ncols=2, dpi=85, figsize=(10,6))\n","for i, ax in enumerate(axes.flatten()):\n","    data = df[df.columns[i]]\n","    ax.plot(data, color='red', linewidth=1)\n","    # Decorations\n","    ax.set_title(df.columns[i])\n","    ax.xaxis.set_ticks_position('none')\n","    ax.yaxis.set_ticks_position('none')\n","    ax.spines[\"top\"].set_alpha(0)\n","    ax.tick_params(labelsize=6)\n","\n","plt.tight_layout();"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 850x510 with 2 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"bJXLim6uAW7_","colab":{"base_uri":"https://localhost:8080/","height":107},"executionInfo":{"status":"ok","timestamp":1609618157396,"user_tz":-330,"elapsed":1611,"user":{"displayName":"Prateek Jaiswal","photoUrl":"","userId":"02713205155461107256"}},"outputId":"3de7dbff-d017-404f-ffb4-17c90ae8fbff"},"source":["from statsmodels.tsa.stattools import grangercausalitytests\n","maxlag=12\n","test = 'ssr_chi2test'\n","def grangers_causation_matrix(data, variables, test='ssr_chi2test', verbose=False):    \n","    \"\"\"Check Granger Causality of all possible combinations of the Time series.\n","    The rows are the response variable, columns are predictors. The values in the table \n","    are the P-Values. P-Values lesser than the significance level (0.05), implies \n","    the Null Hypothesis that the coefficients of the corresponding past values is \n","    zero, that is, the X does not cause Y can be rejected.\n","\n","    data      : pandas dataframe containing the time series variables\n","    variables : list containing names of the time series variables.\n","    \"\"\"\n","    df = pd.DataFrame(np.zeros((len(variables), len(variables))), columns=variables, index=variables)\n","    for c in df.columns:\n","        for r in df.index:\n","            test_result = grangercausalitytests(data[[r, c]], maxlag=maxlag, verbose=False)\n","            p_values = [round(test_result[i+1][0][test][1],4) for i in range(maxlag)]\n","            if verbose: print(f'Y = {r}, X = {c}, P Values = {p_values}')\n","            min_p_value = np.min(p_values)\n","            df.loc[r, c] = min_p_value\n","    df.columns = [var + '_x' for var in variables]\n","    df.index = [var + '_y' for var in variables]\n","    return df\n","\n","grangers_causation_matrix(df, variables = df.columns) "],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>return_x</th>\n","      <th>negative tone_x</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>return_y</th>\n","      <td>1.000</td>\n","      <td>0.1397</td>\n","    </tr>\n","    <tr>\n","      <th>negative tone_y</th>\n","      <td>0.231</td>\n","      <td>1.0000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                 return_x  negative tone_x\n","return_y            1.000           0.1397\n","negative tone_y     0.231           1.0000"]},"metadata":{"tags":[]},"execution_count":4}]},{"cell_type":"code","metadata":{"id":"sw-oAStCMAgj"},"source":["# Results from Granger Casuality test can be read as : negative tone do not causes return and return also do not causes negative tone at a statistically significant level.\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"4o50qsaedyyu","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1609618241917,"user_tz":-330,"elapsed":1782,"user":{"displayName":"Prateek Jaiswal","photoUrl":"","userId":"02713205155461107256"}},"outputId":"6d8fa1d3-b9d8-4efa-af27-a3cc129fcd38"},"source":["t = 5\n","df_train, df_test = df[0:-t], df[-t:]\n","\n","# Check size\n","print(df_train.shape)  # (723, 2)\n","print(df_test.shape)  # (5, 2)\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["(723, 2)\n","(5, 2)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"nIl2Hdo0hBuI"},"source":["def adfuller_test(series, signif=0.05, name='', verbose=False):\n","    \"\"\"Perform ADFuller to test for Stationarity of given series and print report\"\"\"\n","    r = adfuller(series, autolag='AIC')\n","    output = {'test_statistic':round(r[0], 4), 'pvalue':round(r[1], 4), 'n_lags':round(r[2], 4), 'n_obs':r[3]}\n","    p_value = output['pvalue'] \n","    def adjust(val, length= 6): return str(val).ljust(length)\n","\n","    # Print Summary\n","    print(f'    Augmented Dickey-Fuller Test on \"{name}\"', \"\\n   \", '-'*47)\n","    print(f' Null Hypothesis: Data has unit root. Non-Stationary.')\n","    print(f' Significance Level    = {signif}')\n","    print(f' Test Statistic        = {output[\"test_statistic\"]}')\n","    print(f' No. Lags Chosen       = {output[\"n_lags\"]}')\n","\n","    for key,val in r[4].items():\n","        print(f' Critical value {adjust(key)} = {round(val, 3)}')\n","\n","    if p_value <= signif:\n","        print(f\" => P-Value = {p_value}. Rejecting Null Hypothesis.\")\n","        print(f\" => Series is Stationary.\")\n","    else:\n","        print(f\" => P-Value = {p_value}. Weak evidence to reject the Null Hypothesis.\")\n","        print(f\" => Series is Non-Stationary.\") "],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"k1WENsT3wLnE","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1609618247335,"user_tz":-330,"elapsed":1546,"user":{"displayName":"Prateek Jaiswal","photoUrl":"","userId":"02713205155461107256"}},"outputId":"c55fceaf-be8c-49b2-baa2-a64c82813720"},"source":["# ADF Test on each column\n","for name, column in df_train.iteritems():\n","    adfuller_test(column, name=column.name)\n","    print('\\n')"],"execution_count":null,"outputs":[{"output_type":"stream","text":["    Augmented Dickey-Fuller Test on \"return\" \n","    -----------------------------------------------\n"," Null Hypothesis: Data has unit root. Non-Stationary.\n"," Significance Level    = 0.05\n"," Test Statistic        = -28.6705\n"," No. Lags Chosen       = 0\n"," Critical value 1%     = -3.439\n"," Critical value 5%     = -2.866\n"," Critical value 10%    = -2.569\n"," => P-Value = 0.0. Rejecting Null Hypothesis.\n"," => Series is Stationary.\n","\n","\n","    Augmented Dickey-Fuller Test on \"negative tone\" \n","    -----------------------------------------------\n"," Null Hypothesis: Data has unit root. Non-Stationary.\n"," Significance Level    = 0.05\n"," Test Statistic        = -4.5516\n"," No. Lags Chosen       = 13\n"," Critical value 1%     = -3.44\n"," Critical value 5%     = -2.866\n"," Critical value 10%    = -2.569\n"," => P-Value = 0.0002. Rejecting Null Hypothesis.\n"," => Series is Stationary.\n","\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"g75LrN35wPvT","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1609618251260,"user_tz":-330,"elapsed":1376,"user":{"displayName":"Prateek Jaiswal","photoUrl":"","userId":"02713205155461107256"}},"outputId":"1ad6d582-b351-4a09-9364-c98cf53710a7"},"source":["model = VAR(df_train)\r\n","for i in [1,2,3,4,5,6,7,8,9,10,11,12]:\r\n","    result = model.fit(i)\r\n","    print('Lag Order =', i)\r\n","    print('AIC : ', result.aic)\r\n","    print('BIC : ', result.bic)\r\n","    print('FPE : ', result.fpe)\r\n","    print('HQIC: ', result.hqic, '\\n')\r\n","print(df_train[-4:])   "],"execution_count":null,"outputs":[{"output_type":"stream","text":["Lag Order = 1\n","AIC :  0.6918309513864411\n","BIC :  0.7299087226237777\n","FPE :  1.9973694644053437\n","HQIC:  0.7065291641817883 \n","\n","Lag Order = 2\n","AIC :  0.6949166657526983\n","BIC :  0.7584484152296047\n","FPE :  2.0035429942624563\n","HQIC:  0.7194418217567502 \n","\n","Lag Order = 3\n","AIC :  0.7076921086766003\n","BIC :  0.7967331044656856\n","FPE :  2.029304927197869\n","HQIC:  0.7420668119491812 \n","\n","Lag Order = 4\n","AIC :  0.7198255895406759\n","BIC :  0.834431298078894\n","FPE :  2.0540802992647746\n","HQIC:  0.764072527164875 \n","\n","Lag Order = 5\n","AIC :  0.7256585804137182\n","BIC :  0.8658846674876193\n","FPE :  2.0661012465898896\n","HQIC:  0.7798005229128264 \n","\n","Lag Order = 6\n","AIC :  0.7336036472753914\n","BIC :  0.8995059790126162\n","FPE :  2.082588510073587\n","HQIC:  0.7976634490324928 \n","\n","Lag Order = 7\n","AIC :  0.7195424611197508\n","BIC :  0.911177104986817\n","FPE :  2.0535186242084236\n","HQIC:  0.7935430607999879 \n","\n","Lag Order = 8\n","AIC :  0.7219640217525406\n","BIC :  0.939387247558969\n","FPE :  2.058509030284045\n","HQIC:  0.8059284427280761 \n","\n","Lag Order = 9\n","AIC :  0.7321959638408045\n","BIC :  0.975464244749634\n","FPE :  2.079694690349608\n","HQIC:  0.8261473146184976 \n","\n","Lag Order = 10\n","AIC :  0.7427162566065665\n","BIC :  1.0118862701513076\n","FPE :  2.1017079861345906\n","HQIC:  0.8466777312583872 \n","\n","Lag Order = 11\n","AIC :  0.7543179611802215\n","BIC :  1.0494465902882988\n","FPE :  2.1262565269693723\n","HQIC:  0.8683128397764234 \n","\n","Lag Order = 12\n","AIC :  0.750992331512384\n","BIC :  1.0721366655351154\n","FPE :  2.119224749121327\n","HQIC:  0.8750439805574556 \n","\n","            return  negative tone\n","Date                             \n","2019-12-23    0.77           1.87\n","2019-12-24    4.14           0.00\n","2019-12-25    0.00           0.00\n","2019-12-26   -0.63           0.83\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/statsmodels/tsa/base/tsa_model.py:219: ValueWarning: A date index has been provided, but it has no associated frequency information and so will be ignored when e.g. forecasting.\n","  ' ignored when e.g. forecasting.', ValueWarning)\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"O9yZVJin1LTq","executionInfo":{"status":"ok","timestamp":1609618272079,"user_tz":-330,"elapsed":1826,"user":{"displayName":"Prateek Jaiswal","photoUrl":"","userId":"02713205155461107256"}},"outputId":"63e7ae4f-1018-43d1-80bc-36ebd1bbcaaa"},"source":["x = model.select_order(maxlags=12)\r\n","x.summary()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<table class=\"simpletable\">\n","<caption>VAR Order Selection (* highlights the minimums)</caption>\n","<tr>\n","   <td></td>      <th>AIC</th>         <th>BIC</th>         <th>FPE</th>        <th>HQIC</th>    \n","</tr>\n","<tr>\n","  <th>0</th>  <td>    0.7362</td>  <td>    0.7490*</td> <td>     2.088</td>  <td>    0.7411</td> \n","</tr>\n","<tr>\n","  <th>1</th>  <td>    0.7124*</td> <td>    0.7509</td>  <td>     2.039*</td> <td>    0.7272*</td>\n","</tr>\n","<tr>\n","  <th>2</th>  <td>    0.7140</td>  <td>    0.7782</td>  <td>     2.042</td>  <td>    0.7388</td> \n","</tr>\n","<tr>\n","  <th>3</th>  <td>    0.7240</td>  <td>    0.8139</td>  <td>     2.063</td>  <td>    0.7588</td> \n","</tr>\n","<tr>\n","  <th>4</th>  <td>    0.7342</td>  <td>    0.8498</td>  <td>     2.084</td>  <td>    0.7788</td> \n","</tr>\n","<tr>\n","  <th>5</th>  <td>    0.7394</td>  <td>    0.8807</td>  <td>     2.095</td>  <td>    0.7940</td> \n","</tr>\n","<tr>\n","  <th>6</th>  <td>    0.7455</td>  <td>    0.9124</td>  <td>     2.107</td>  <td>    0.8100</td> \n","</tr>\n","<tr>\n","  <th>7</th>  <td>    0.7303</td>  <td>    0.9230</td>  <td>     2.076</td>  <td>    0.8047</td> \n","</tr>\n","<tr>\n","  <th>8</th>  <td>    0.7321</td>  <td>    0.9505</td>  <td>     2.080</td>  <td>    0.8165</td> \n","</tr>\n","<tr>\n","  <th>9</th>  <td>    0.7395</td>  <td>    0.9836</td>  <td>     2.095</td>  <td>    0.8338</td> \n","</tr>\n","<tr>\n","  <th>10</th> <td>    0.7475</td>  <td>     1.017</td>  <td>     2.112</td>  <td>    0.8517</td> \n","</tr>\n","<tr>\n","  <th>11</th> <td>    0.7567</td>  <td>     1.052</td>  <td>     2.131</td>  <td>    0.8708</td> \n","</tr>\n","<tr>\n","  <th>12</th> <td>    0.7510</td>  <td>     1.072</td>  <td>     2.119</td>  <td>    0.8750</td> \n","</tr>\n","</table>"],"text/plain":["<class 'statsmodels.iolib.table.SimpleTable'>"]},"metadata":{"tags":[]},"execution_count":10}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5SN_79o61nUA","executionInfo":{"status":"ok","timestamp":1609618281050,"user_tz":-330,"elapsed":1377,"user":{"displayName":"Prateek Jaiswal","photoUrl":"","userId":"02713205155461107256"}},"outputId":"7b35b47e-c676-42ac-dd3b-85bd818dce1d"},"source":["model_fitted = model.fit(1)\r\n","model_fitted.summary()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Summary of Regression Results   \n","==================================\n","Model:                         VAR\n","Method:                        OLS\n","Date:           Sat, 02, Jan, 2021\n","Time:                     20:11:21\n","--------------------------------------------------------------------\n","No. of Equations:         2.00000    BIC:                   0.729909\n","Nobs:                     722.000    HQIC:                  0.706529\n","Log likelihood:          -2292.70    FPE:                    1.99737\n","AIC:                     0.691831    Det(Omega_mle):         1.98087\n","--------------------------------------------------------------------\n","Results for equation return\n","===================================================================================\n","                      coefficient       std. error           t-stat            prob\n","-----------------------------------------------------------------------------------\n","const                    0.145619         0.086382            1.686           0.092\n","L1.return               -0.069612         0.037229           -1.870           0.062\n","L1.negative tone        -0.082297         0.055789           -1.475           0.140\n","===================================================================================\n","\n","Results for equation negative tone\n","===================================================================================\n","                      coefficient       std. error           t-stat            prob\n","-----------------------------------------------------------------------------------\n","const                    1.011526         0.057063           17.727           0.000\n","L1.return               -0.024044         0.024593           -0.978           0.328\n","L1.negative tone         0.157704         0.036853            4.279           0.000\n","===================================================================================\n","\n","Correlation matrix of residuals\n","                   return  negative tone\n","return           1.000000      -0.055552\n","negative tone   -0.055552       1.000000\n","\n"]},"metadata":{"tags":[]},"execution_count":11}]},{"cell_type":"code","metadata":{"id":"oQt4xV7U22hI","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1609618284734,"user_tz":-330,"elapsed":1943,"user":{"displayName":"Prateek Jaiswal","photoUrl":"","userId":"02713205155461107256"}},"outputId":"597660fe-1c35-43ab-a2cf-541994aba5c9"},"source":["from statsmodels.stats.stattools import durbin_watson\r\n","out = durbin_watson(model_fitted.resid)\r\n","\r\n","for col, val in zip(df.columns, out):\r\n","    print(col, ':', round(val, 2))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["return : 2.0\n","negative tone : 2.03\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"vhMlrqfmlKyt","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1609618287954,"user_tz":-330,"elapsed":1515,"user":{"displayName":"Prateek Jaiswal","photoUrl":"","userId":"02713205155461107256"}},"outputId":"86a75f07-5e7f-49ac-cdbd-ce3aa8d58d7f"},"source":["# Get the lag order\r\n","lag_order = model_fitted.k_ar\r\n","print(lag_order)  #1\r\n","\r\n","# Input data for forecasting\r\n","forecast_input = df_train.values[-lag_order:]\r\n","forecast_input"],"execution_count":null,"outputs":[{"output_type":"stream","text":["1\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["array([[-0.63,  0.83]])"]},"metadata":{"tags":[]},"execution_count":13}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":227},"id":"wr3s2ZcAcsJs","executionInfo":{"status":"ok","timestamp":1609618290195,"user_tz":-330,"elapsed":974,"user":{"displayName":"Prateek Jaiswal","photoUrl":"","userId":"02713205155461107256"}},"outputId":"9ac6980c-6fa4-4192-cfe9-fbec009cab4a"},"source":["# Forecast\r\n","t=5\r\n","fc = model_fitted.forecast(y=forecast_input, steps=t)\r\n","\r\n","df_forecast = pd.DataFrame(fc, index=df.index[-t:], columns=df.columns)\r\n","df_forecast"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>return</th>\n","      <th>negative tone</th>\n","    </tr>\n","    <tr>\n","      <th>Date</th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2019-12-27</th>\n","      <td>0.121168</td>\n","      <td>1.157568</td>\n","    </tr>\n","    <tr>\n","      <th>2019-12-28</th>\n","      <td>0.041920</td>\n","      <td>1.191167</td>\n","    </tr>\n","    <tr>\n","      <th>2019-12-29</th>\n","      <td>0.044671</td>\n","      <td>1.198371</td>\n","    </tr>\n","    <tr>\n","      <th>2019-12-30</th>\n","      <td>0.043887</td>\n","      <td>1.199441</td>\n","    </tr>\n","    <tr>\n","      <th>2019-12-31</th>\n","      <td>0.043853</td>\n","      <td>1.199628</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["              return  negative tone\n","Date                               \n","2019-12-27  0.121168       1.157568\n","2019-12-28  0.041920       1.191167\n","2019-12-29  0.044671       1.198371\n","2019-12-30  0.043887       1.199441\n","2019-12-31  0.043853       1.199628"]},"metadata":{"tags":[]},"execution_count":14}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LSVYaKuiAXud","executionInfo":{"status":"ok","timestamp":1609618293932,"user_tz":-330,"elapsed":1647,"user":{"displayName":"Prateek Jaiswal","photoUrl":"","userId":"02713205155461107256"}},"outputId":"4a72f41e-8cce-4803-d3a2-f25e082adcbe"},"source":["from statsmodels.tsa.stattools import acf\r\n","def forecast_accuracy(forecast, actual):\r\n","    mape = np.mean(np.abs(forecast - actual)/np.abs(actual))  # MAPE\r\n","    me = np.mean(forecast - actual)             # ME\r\n","    mae = np.mean(np.abs(forecast - actual))    # MAE\r\n","    mpe = np.mean((forecast - actual)/actual)   # MPE\r\n","    rmse = np.mean((forecast - actual)**2)**.5  # RMSE\r\n","    corr = np.corrcoef(forecast, actual)[0,1]   # corr\r\n","    \r\n","    return({'mape':mape, 'me':me, 'mae': mae, \r\n","            'mpe': mpe, 'rmse':rmse, 'corr':corr})\r\n","\r\n","print('Forecast Accuracy of: return')\r\n","accuracy_prod = forecast_accuracy(df_forecast['return'].values, df_test['return'])\r\n","for k, v in accuracy_prod.items():\r\n","    print(k, ': ', round(v,4))\r\n","\r\n","print('\\nForecast Accuracy of: negative tone')\r\n","accuracy_prod = forecast_accuracy(df_forecast['negative tone'].values, df_test['negative tone'])\r\n","for k, v in accuracy_prod.items():\r\n","    print(k, ': ', round(v,4))\r\n","\r\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Forecast Accuracy of: return\n","mape :  inf\n","me :  0.2031\n","mae :  0.2031\n","mpe :  inf\n","rmse :  0.2906\n","corr :  -0.1697\n","\n","Forecast Accuracy of: negative tone\n","mape :  2.006\n","me :  0.4032\n","mae :  0.6274\n","mpe :  1.8646\n","rmse :  0.7092\n","corr :  0.0692\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"XZoCwfq-FOmZ"},"source":[""],"execution_count":null,"outputs":[]}]}