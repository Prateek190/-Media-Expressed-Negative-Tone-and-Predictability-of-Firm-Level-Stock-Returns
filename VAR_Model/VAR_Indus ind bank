{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"VAR_Indus ind bank","provenance":[{"file_id":"1EeY1p-dYepDJ6MGd0q4bcbNkA56iCUgl","timestamp":1610554109225},{"file_id":"1JTFTFR7lwoa55CppmwBCyC9ZFqAiXw8F","timestamp":1609616711671}],"collapsed_sections":[],"mount_file_id":"1wf6scZsRUIEjaj7fVexM4proPkdKFBg2","authorship_tag":"ABX9TyPxlnShTge4ZDT2Xm3Toyws"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"aTt-bLhWqiVF","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1610554380318,"user_tz":-330,"elapsed":2277,"user":{"displayName":"Prateek Jaiswal","photoUrl":"","userId":"02713205155461107256"}},"outputId":"e43dd129-56d3-4a23-e81d-0d719d70e484"},"source":["import pandas as pd\n","import numpy as np\n","import os\n","import matplotlib.pyplot as plt\n","%matplotlib inline\n","from statsmodels.tsa.api import VAR\n","from statsmodels.tsa.stattools import adfuller\n","from statsmodels.tools.eval_measures import rmse,aic"],"execution_count":null,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/statsmodels/tools/_testing.py:19: FutureWarning: pandas.util.testing is deprecated. Use the functions in the public API at pandas.testing instead.\n","  import pandas.util.testing as tm\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"a5PP2bF1rhX1","colab":{"base_uri":"https://localhost:8080/","height":436},"executionInfo":{"status":"ok","timestamp":1610554384762,"user_tz":-330,"elapsed":3897,"user":{"displayName":"Prateek Jaiswal","photoUrl":"","userId":"02713205155461107256"}},"outputId":"7ce88a1e-e0d6-4753-ed7a-4473f54c7500"},"source":["\n","r=pd.read_csv(\"/content/drive/My Drive/stock/final_INDUSINDBK.NS.csv\")\n","nt=pd.read_csv(\"/content/drive/My Drive/tone/pct730/pct730_indus.csv\")\n","df=pd.DataFrame()\n","df['return']=r['return']\n","df['negative tone']=nt['PCT']\n","df['Date']=r['Date']\n","df.set_index('Date',inplace=True)\n","df[~df.isin([np.nan, np.inf, -np.inf]).any(1)]\n","df.replace([np.inf, -np.inf], np.nan)\n","\n","df.dropna(inplace=True)\n","df\n","\n"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>return</th>\n","      <th>negative tone</th>\n","    </tr>\n","    <tr>\n","      <th>Date</th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-01-01</th>\n","      <td>0.00</td>\n","      <td>0.35</td>\n","    </tr>\n","    <tr>\n","      <th>2018-01-02</th>\n","      <td>1.24</td>\n","      <td>1.68</td>\n","    </tr>\n","    <tr>\n","      <th>2018-01-03</th>\n","      <td>-0.83</td>\n","      <td>0.58</td>\n","    </tr>\n","    <tr>\n","      <th>2018-01-04</th>\n","      <td>1.00</td>\n","      <td>0.24</td>\n","    </tr>\n","    <tr>\n","      <th>2018-01-05</th>\n","      <td>3.13</td>\n","      <td>0.24</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2019-12-27</th>\n","      <td>-0.04</td>\n","      <td>0.00</td>\n","    </tr>\n","    <tr>\n","      <th>2019-12-28</th>\n","      <td>0.00</td>\n","      <td>0.36</td>\n","    </tr>\n","    <tr>\n","      <th>2019-12-29</th>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","    </tr>\n","    <tr>\n","      <th>2019-12-30</th>\n","      <td>0.54</td>\n","      <td>0.50</td>\n","    </tr>\n","    <tr>\n","      <th>2019-12-31</th>\n","      <td>0.00</td>\n","      <td>0.15</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>728 rows Ã— 2 columns</p>\n","</div>"],"text/plain":["            return  negative tone\n","Date                             \n","2018-01-01    0.00           0.35\n","2018-01-02    1.24           1.68\n","2018-01-03   -0.83           0.58\n","2018-01-04    1.00           0.24\n","2018-01-05    3.13           0.24\n","...            ...            ...\n","2019-12-27   -0.04           0.00\n","2019-12-28    0.00           0.36\n","2019-12-29    0.00           0.00\n","2019-12-30    0.54           0.50\n","2019-12-31    0.00           0.15\n","\n","[728 rows x 2 columns]"]},"metadata":{"tags":[]},"execution_count":2}]},{"cell_type":"code","metadata":{"id":"oalP4NKkAMMu","colab":{"base_uri":"https://localhost:8080/","height":517},"executionInfo":{"status":"ok","timestamp":1610554451203,"user_tz":-330,"elapsed":65398,"user":{"displayName":"Prateek Jaiswal","photoUrl":"","userId":"02713205155461107256"}},"outputId":"d195d5b3-ae9a-40ca-daf1-115ab5aa2c62"},"source":["fig, axes = plt.subplots(nrows=1, ncols=2, dpi=85, figsize=(10,6))\n","for i, ax in enumerate(axes.flatten()):\n","    data = df[df.columns[i]]\n","    ax.plot(data, color='red', linewidth=1)\n","    # Decorations\n","    ax.set_title(df.columns[i])\n","    ax.xaxis.set_ticks_position('none')\n","    ax.yaxis.set_ticks_position('none')\n","    ax.spines[\"top\"].set_alpha(0)\n","    ax.tick_params(labelsize=6)\n","\n","plt.tight_layout();"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 850x510 with 2 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"bJXLim6uAW7_","colab":{"base_uri":"https://localhost:8080/","height":107},"executionInfo":{"status":"ok","timestamp":1610554515685,"user_tz":-330,"elapsed":1974,"user":{"displayName":"Prateek Jaiswal","photoUrl":"","userId":"02713205155461107256"}},"outputId":"c55ba6d1-9fb0-4f36-871c-9d14bf8472ab"},"source":["from statsmodels.tsa.stattools import grangercausalitytests\n","maxlag=12\n","test = 'ssr_chi2test'\n","def grangers_causation_matrix(data, variables, test='ssr_chi2test', verbose=False):    \n","    \"\"\"Check Granger Causality of all possible combinations of the Time series.\n","    The rows are the response variable, columns are predictors. The values in the table \n","    are the P-Values. P-Values lesser than the significance level (0.05), implies \n","    the Null Hypothesis that the coefficients of the corresponding past values is \n","    zero, that is, the X does not cause Y can be rejected.\n","\n","    data      : pandas dataframe containing the time series variables\n","    variables : list containing names of the time series variables.\n","    \"\"\"\n","    df = pd.DataFrame(np.zeros((len(variables), len(variables))), columns=variables, index=variables)\n","    for c in df.columns:\n","        for r in df.index:\n","            test_result = grangercausalitytests(data[[r, c]], maxlag=maxlag, verbose=False)\n","            p_values = [round(test_result[i+1][0][test][1],4) for i in range(maxlag)]\n","            if verbose: print(f'Y = {r}, X = {c}, P Values = {p_values}')\n","            min_p_value = np.min(p_values)\n","            df.loc[r, c] = min_p_value\n","    df.columns = [var + '_x' for var in variables]\n","    df.index = [var + '_y' for var in variables]\n","    return df\n","\n","grangers_causation_matrix(df, variables = df.columns) "],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>return_x</th>\n","      <th>negative tone_x</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>return_y</th>\n","      <td>1.0000</td>\n","      <td>0.118</td>\n","    </tr>\n","    <tr>\n","      <th>negative tone_y</th>\n","      <td>0.0611</td>\n","      <td>1.000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                 return_x  negative tone_x\n","return_y           1.0000            0.118\n","negative tone_y    0.0611            1.000"]},"metadata":{"tags":[]},"execution_count":4}]},{"cell_type":"code","metadata":{"id":"sw-oAStCMAgj"},"source":["# Results from Granger Casuality test can be read as : negative tone do not causes return significantly and return causes negative tone (10% significance).\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"4o50qsaedyyu","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1610554521490,"user_tz":-330,"elapsed":1438,"user":{"displayName":"Prateek Jaiswal","photoUrl":"","userId":"02713205155461107256"}},"outputId":"867fd94d-0ec1-47f7-8dfe-7ebc6e5bfa14"},"source":["t = 5\n","df_train, df_test = df[0:-t], df[-t:]\n","\n","# Check size\n","print(df_train.shape)  # (723, 2)\n","print(df_test.shape)  # (5, 2)\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["(723, 2)\n","(5, 2)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"nIl2Hdo0hBuI"},"source":["def adfuller_test(series, signif=0.05, name='', verbose=False):\n","    \"\"\"Perform ADFuller to test for Stationarity of given series and print report\"\"\"\n","    r = adfuller(series, autolag='AIC')\n","    output = {'test_statistic':round(r[0], 4), 'pvalue':round(r[1], 4), 'n_lags':round(r[2], 4), 'n_obs':r[3]}\n","    p_value = output['pvalue'] \n","    def adjust(val, length= 6): return str(val).ljust(length)\n","\n","    # Print Summary\n","    print(f'    Augmented Dickey-Fuller Test on \"{name}\"', \"\\n   \", '-'*47)\n","    print(f' Null Hypothesis: Data has unit root. Non-Stationary.')\n","    print(f' Significance Level    = {signif}')\n","    print(f' Test Statistic        = {output[\"test_statistic\"]}')\n","    print(f' No. Lags Chosen       = {output[\"n_lags\"]}')\n","\n","    for key,val in r[4].items():\n","        print(f' Critical value {adjust(key)} = {round(val, 3)}')\n","\n","    if p_value <= signif:\n","        print(f\" => P-Value = {p_value}. Rejecting Null Hypothesis.\")\n","        print(f\" => Series is Stationary.\")\n","    else:\n","        print(f\" => P-Value = {p_value}. Weak evidence to reject the Null Hypothesis.\")\n","        print(f\" => Series is Non-Stationary.\") "],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"k1WENsT3wLnE","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1610554527309,"user_tz":-330,"elapsed":1533,"user":{"displayName":"Prateek Jaiswal","photoUrl":"","userId":"02713205155461107256"}},"outputId":"219670b6-f240-4d97-9a6d-b647e7781f03"},"source":["# ADF Test on each column\n","for name, column in df_train.iteritems():\n","    adfuller_test(column, name=column.name)\n","    print('\\n')"],"execution_count":null,"outputs":[{"output_type":"stream","text":["    Augmented Dickey-Fuller Test on \"return\" \n","    -----------------------------------------------\n"," Null Hypothesis: Data has unit root. Non-Stationary.\n"," Significance Level    = 0.05\n"," Test Statistic        = -26.8678\n"," No. Lags Chosen       = 0\n"," Critical value 1%     = -3.439\n"," Critical value 5%     = -2.866\n"," Critical value 10%    = -2.569\n"," => P-Value = 0.0. Rejecting Null Hypothesis.\n"," => Series is Stationary.\n","\n","\n","    Augmented Dickey-Fuller Test on \"negative tone\" \n","    -----------------------------------------------\n"," Null Hypothesis: Data has unit root. Non-Stationary.\n"," Significance Level    = 0.05\n"," Test Statistic        = -7.9804\n"," No. Lags Chosen       = 6\n"," Critical value 1%     = -3.44\n"," Critical value 5%     = -2.866\n"," Critical value 10%    = -2.569\n"," => P-Value = 0.0. Rejecting Null Hypothesis.\n"," => Series is Stationary.\n","\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"g75LrN35wPvT","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1610554529530,"user_tz":-330,"elapsed":1533,"user":{"displayName":"Prateek Jaiswal","photoUrl":"","userId":"02713205155461107256"}},"outputId":"e424c2d9-7d06-47f4-fb53-f99f93585009"},"source":["model = VAR(df_train)\r\n","for i in [1,2,3,4,5,6,7,8,9,10,11,12]:\r\n","    result = model.fit(i)\r\n","    print('Lag Order =', i)\r\n","    print('AIC : ', result.aic)\r\n","    print('BIC : ', result.bic)\r\n","    print('FPE : ', result.fpe)\r\n","    print('HQIC: ', result.hqic, '\\n')\r\n","print(df_train[-4:])   "],"execution_count":null,"outputs":[{"output_type":"stream","text":["Lag Order = 1\n","AIC :  0.9733714103036725\n","BIC :  1.011449181541009\n","FPE :  2.6468533145005266\n","HQIC:  0.9880696230990197 \n","\n","Lag Order = 2\n","AIC :  0.9785499083711487\n","BIC :  1.0420816578480552\n","FPE :  2.6605965193828998\n","HQIC:  1.0030750643752007 \n","\n","Lag Order = 3\n","AIC :  0.983536955161463\n","BIC :  1.0725779509505484\n","FPE :  2.6739002665567635\n","HQIC:  1.017911658434044 \n","\n","Lag Order = 4\n","AIC :  0.9911077662406969\n","BIC :  1.105713474778915\n","FPE :  2.6942244291005752\n","HQIC:  1.035354703864896 \n","\n","Lag Order = 5\n","AIC :  0.9962565433760787\n","BIC :  1.1364826304499798\n","FPE :  2.7081380668453\n","HQIC:  1.050398485875187 \n","\n","Lag Order = 6\n","AIC :  1.0025633471511086\n","BIC :  1.1684656788883332\n","FPE :  2.7252803290430414\n","HQIC:  1.0666231489082099 \n","\n","Lag Order = 7\n","AIC :  0.9964681038711235\n","BIC :  1.1881027477381898\n","FPE :  2.7087312900552543\n","HQIC:  1.0704687035513607 \n","\n","Lag Order = 8\n","AIC :  0.9974661795639723\n","BIC :  1.2148894053704007\n","FPE :  2.7114515176148988\n","HQIC:  1.0814306005395078 \n","\n","Lag Order = 9\n","AIC :  1.0061710837293463\n","BIC :  1.2494393646381756\n","FPE :  2.7351771885252045\n","HQIC:  1.1001224345070393 \n","\n","Lag Order = 10\n","AIC :  1.0063046873076695\n","BIC :  1.2754747008524108\n","FPE :  2.7355671219744706\n","HQIC:  1.1102661619594902 \n","\n","Lag Order = 11\n","AIC :  1.0139120791659493\n","BIC :  1.3090407082740265\n","FPE :  2.756487026206692\n","HQIC:  1.1279069577621512 \n","\n","Lag Order = 12\n","AIC :  1.0200873963380994\n","BIC :  1.3412317303608308\n","FPE :  2.773598022050553\n","HQIC:  1.144139045383171 \n","\n","            return  negative tone\n","Date                             \n","2019-12-23    1.65           0.00\n","2019-12-24    2.86           0.56\n","2019-12-25    0.00           4.34\n","2019-12-26    0.54           0.00\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/statsmodels/tsa/base/tsa_model.py:219: ValueWarning: A date index has been provided, but it has no associated frequency information and so will be ignored when e.g. forecasting.\n","  ' ignored when e.g. forecasting.', ValueWarning)\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"O9yZVJin1LTq","executionInfo":{"status":"ok","timestamp":1610554539496,"user_tz":-330,"elapsed":1995,"user":{"displayName":"Prateek Jaiswal","photoUrl":"","userId":"02713205155461107256"}},"outputId":"eb13b931-25f1-4bb7-c3d7-b96187642b4b"},"source":["x = model.select_order(maxlags=12)\r\n","x.summary()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<table class=\"simpletable\">\n","<caption>VAR Order Selection (* highlights the minimums)</caption>\n","<tr>\n","   <td></td>      <th>AIC</th>         <th>BIC</th>         <th>FPE</th>        <th>HQIC</th>    \n","</tr>\n","<tr>\n","  <th>0</th>  <td>    0.9814*</td> <td>    0.9942*</td> <td>     2.668*</td> <td>    0.9863*</td>\n","</tr>\n","<tr>\n","  <th>1</th>  <td>    0.9877</td>  <td>     1.026</td>  <td>     2.685</td>  <td>     1.003</td> \n","</tr>\n","<tr>\n","  <th>2</th>  <td>    0.9916</td>  <td>     1.056</td>  <td>     2.696</td>  <td>     1.016</td> \n","</tr>\n","<tr>\n","  <th>3</th>  <td>    0.9945</td>  <td>     1.084</td>  <td>     2.703</td>  <td>     1.029</td> \n","</tr>\n","<tr>\n","  <th>4</th>  <td>     1.001</td>  <td>     1.116</td>  <td>     2.720</td>  <td>     1.045</td> \n","</tr>\n","<tr>\n","  <th>5</th>  <td>     1.008</td>  <td>     1.150</td>  <td>     2.741</td>  <td>     1.063</td> \n","</tr>\n","<tr>\n","  <th>6</th>  <td>     1.015</td>  <td>     1.182</td>  <td>     2.759</td>  <td>     1.079</td> \n","</tr>\n","<tr>\n","  <th>7</th>  <td>     1.007</td>  <td>     1.199</td>  <td>     2.737</td>  <td>     1.081</td> \n","</tr>\n","<tr>\n","  <th>8</th>  <td>     1.006</td>  <td>     1.224</td>  <td>     2.734</td>  <td>     1.090</td> \n","</tr>\n","<tr>\n","  <th>9</th>  <td>     1.012</td>  <td>     1.256</td>  <td>     2.751</td>  <td>     1.106</td> \n","</tr>\n","<tr>\n","  <th>10</th> <td>     1.009</td>  <td>     1.279</td>  <td>     2.743</td>  <td>     1.113</td> \n","</tr>\n","<tr>\n","  <th>11</th> <td>     1.016</td>  <td>     1.311</td>  <td>     2.762</td>  <td>     1.130</td> \n","</tr>\n","<tr>\n","  <th>12</th> <td>     1.020</td>  <td>     1.341</td>  <td>     2.774</td>  <td>     1.144</td> \n","</tr>\n","</table>"],"text/plain":["<class 'statsmodels.iolib.table.SimpleTable'>"]},"metadata":{"tags":[]},"execution_count":10}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5SN_79o61nUA","executionInfo":{"status":"ok","timestamp":1610554563045,"user_tz":-330,"elapsed":2090,"user":{"displayName":"Prateek Jaiswal","photoUrl":"","userId":"02713205155461107256"}},"outputId":"cbafa602-9bda-4bcd-d536-3b3a455cce6e"},"source":["model_fitted = model.fit(1)\r\n","model_fitted.summary()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Summary of Regression Results   \n","==================================\n","Model:                         VAR\n","Method:                        OLS\n","Date:           Wed, 13, Jan, 2021\n","Time:                     16:16:00\n","--------------------------------------------------------------------\n","No. of Equations:         2.00000    BIC:                    1.01145\n","Nobs:                     722.000    HQIC:                  0.988070\n","Log likelihood:          -2394.33    FPE:                    2.64685\n","AIC:                     0.973371    Det(Omega_mle):         2.62499\n","--------------------------------------------------------------------\n","Results for equation return\n","===================================================================================\n","                      coefficient       std. error           t-stat            prob\n","-----------------------------------------------------------------------------------\n","const                   -0.007794         0.086895           -0.090           0.929\n","L1.return               -0.001317         0.037298           -0.035           0.972\n","L1.negative tone         0.009620         0.068310            0.141           0.888\n","===================================================================================\n","\n","Results for equation negative tone\n","===================================================================================\n","                      coefficient       std. error           t-stat            prob\n","-----------------------------------------------------------------------------------\n","const                    0.805765         0.047347           17.018           0.000\n","L1.return               -0.018731         0.020322           -0.922           0.357\n","L1.negative tone         0.059905         0.037220            1.609           0.108\n","===================================================================================\n","\n","Correlation matrix of residuals\n","                   return  negative tone\n","return           1.000000      -0.010780\n","negative tone   -0.010780       1.000000\n","\n"]},"metadata":{"tags":[]},"execution_count":11}]},{"cell_type":"code","metadata":{"id":"oQt4xV7U22hI","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1610554565213,"user_tz":-330,"elapsed":1404,"user":{"displayName":"Prateek Jaiswal","photoUrl":"","userId":"02713205155461107256"}},"outputId":"fc2a5bd2-1ccd-445a-b217-0ad8a0dca8fa"},"source":["from statsmodels.stats.stattools import durbin_watson\r\n","out = durbin_watson(model_fitted.resid)\r\n","\r\n","for col, val in zip(df.columns, out):\r\n","    print(col, ':', round(val, 2))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["return : 2.0\n","negative tone : 2.0\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"vhMlrqfmlKyt","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1610554567460,"user_tz":-330,"elapsed":1454,"user":{"displayName":"Prateek Jaiswal","photoUrl":"","userId":"02713205155461107256"}},"outputId":"3b710a99-1452-4018-e648-7fce32c6beca"},"source":["# Get the lag order\r\n","lag_order = model_fitted.k_ar\r\n","print(lag_order)  #1\r\n","\r\n","# Input data for forecasting\r\n","forecast_input = df_train.values[-lag_order:]\r\n","forecast_input"],"execution_count":null,"outputs":[{"output_type":"stream","text":["1\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["array([[0.54, 0.  ]])"]},"metadata":{"tags":[]},"execution_count":13}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":227},"id":"wr3s2ZcAcsJs","executionInfo":{"status":"ok","timestamp":1610554569900,"user_tz":-330,"elapsed":1710,"user":{"displayName":"Prateek Jaiswal","photoUrl":"","userId":"02713205155461107256"}},"outputId":"a38db431-f036-47c9-95d5-30256cb07c69"},"source":["# Forecast\r\n","t=5\r\n","fc = model_fitted.forecast(y=forecast_input, steps=t)\r\n","\r\n","df_forecast = pd.DataFrame(fc, index=df.index[-t:], columns=df.columns)\r\n","df_forecast"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>return</th>\n","      <th>negative tone</th>\n","    </tr>\n","    <tr>\n","      <th>Date</th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2019-12-27</th>\n","      <td>-0.008505</td>\n","      <td>0.795650</td>\n","    </tr>\n","    <tr>\n","      <th>2019-12-28</th>\n","      <td>-0.000128</td>\n","      <td>0.853588</td>\n","    </tr>\n","    <tr>\n","      <th>2019-12-29</th>\n","      <td>0.000418</td>\n","      <td>0.856902</td>\n","    </tr>\n","    <tr>\n","      <th>2019-12-30</th>\n","      <td>0.000449</td>\n","      <td>0.857090</td>\n","    </tr>\n","    <tr>\n","      <th>2019-12-31</th>\n","      <td>0.000451</td>\n","      <td>0.857100</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["              return  negative tone\n","Date                               \n","2019-12-27 -0.008505       0.795650\n","2019-12-28 -0.000128       0.853588\n","2019-12-29  0.000418       0.856902\n","2019-12-30  0.000449       0.857090\n","2019-12-31  0.000451       0.857100"]},"metadata":{"tags":[]},"execution_count":14}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LSVYaKuiAXud","executionInfo":{"status":"ok","timestamp":1610554572238,"user_tz":-330,"elapsed":1342,"user":{"displayName":"Prateek Jaiswal","photoUrl":"","userId":"02713205155461107256"}},"outputId":"abf47005-532d-4c2e-d670-4a961903149d"},"source":["from statsmodels.tsa.stattools import acf\r\n","def forecast_accuracy(forecast, actual):\r\n","    mape = np.mean(np.abs(forecast - actual)/np.abs(actual))  # MAPE\r\n","    me = np.mean(forecast - actual)             # ME\r\n","    mae = np.mean(np.abs(forecast - actual))    # MAE\r\n","    mpe = np.mean((forecast - actual)/actual)   # MPE\r\n","    rmse = np.mean((forecast - actual)**2)**.5  # RMSE\r\n","    corr = np.corrcoef(forecast, actual)[0,1]   # corr\r\n","    \r\n","    return({'mape':mape, 'me':me, 'mae': mae, \r\n","            'mpe': mpe, 'rmse':rmse, 'corr':corr})\r\n","\r\n","print('Forecast Accuracy of: return')\r\n","accuracy_prod = forecast_accuracy(df_forecast['return'].values, df_test['return'])\r\n","for k, v in accuracy_prod.items():\r\n","    print(k, ': ', round(v,4))\r\n","\r\n","print('\\nForecast Accuracy of: negative tone')\r\n","accuracy_prod = forecast_accuracy(df_forecast['negative tone'].values, df_test['negative tone'])\r\n","for k, v in accuracy_prod.items():\r\n","    print(k, ': ', round(v,4))\r\n","\r\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Forecast Accuracy of: return\n","mape :  inf\n","me :  -0.1015\n","mae :  0.1144\n","mpe :  nan\n","rmse :  0.2417\n","corr :  0.3378\n","\n","Forecast Accuracy of: negative tone\n","mape :  inf\n","me :  0.6421\n","mae :  0.6421\n","mpe :  inf\n","rmse :  0.6691\n","corr :  0.493\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"XZoCwfq-FOmZ"},"source":[""],"execution_count":null,"outputs":[]}]}